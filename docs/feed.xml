<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2023-01-09T09:15:02+00:00</updated><id>http://localhost:4000/blog/feed.xml</id><title type="html">Jordan’s Blog</title><subtitle>A blog on coding, flying, triathlon and more.</subtitle><entry><title type="html">Professional triathlon has a data problem</title><link href="http://localhost:4000/blog/professional-triathlon-has-a-data-problem" rel="alternate" type="text/html" title="Professional triathlon has a data problem" /><published>2022-12-14T10:56:21+00:00</published><updated>2022-12-14T10:56:21+00:00</updated><id>http://localhost:4000/blog/professional-triathlon-has-a-data-problem</id><content type="html" xml:base="http://localhost:4000/blog/professional-triathlon-has-a-data-problem">&lt;p&gt;For the amateur athlete. Triathlon is an, expensive, but accessible sport. Participating in the amateur side of the sport brings an interest in the professional side of the sport. You find your favourites, and then you want to follow them race.&lt;/p&gt;

&lt;p&gt;Professional triathlon has many well known issues. That have improved dramatically over the past few years.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Poor event broadcasting&lt;/strong&gt;. Many events have poor live coverage. Commentators don’t know athlete backgrounds, results or sometimes what is happening in the race they are commentating on. Coverage can range from moto cameras and helicopters to static cameras. Sometimes there are live splits, sometimes there are not. Triathlons are hard to broadcast, they often cover huge distances. This is improving but not uniformly across brands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lack of prize money&lt;/strong&gt;. Can there be a thriving professional sport when many can’t make a living from it? There have been huge improvements in this from brands such as PTO and Superleague.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Too many events&lt;/strong&gt;. Each triathlon brand – Ironman, Challenge, Clash, PTO, Superleague, World Triathlon, French Grand Prix – has many events throughout the year. They all cover different length events (from long course to short course) but the lack prize money means athletes choose events they can do well at. Resulting in shallower fields, rather than deeper well payed fields. The PTO and Superleague events are an exception to this.&lt;/p&gt;

&lt;p&gt;Many of these issues are being addressed but it is a multi-year effort. Slowly, triathlon is becoming a health professional sport.&lt;/p&gt;

&lt;p&gt;As a bystander watching the improvements I find this exciting. But one thing I think has been missed is data.&lt;/p&gt;

&lt;p&gt;Triathlon is a sport full of amateur athletes. We all want to compare our times against those of the professionals or see how fast professionals are. Doing that is often difficult.&lt;/p&gt;

&lt;p&gt;Leo Bergere recently won the World Triathlon Championship Series in Abu Dhabi. He ran the final 10km of race in 29:44. To get that data I can go to his &lt;a href=&quot;https://wtcs.triathlon.org/athletes/profile/63162/leo_bergere&quot;&gt;athlete page&lt;/a&gt; and click on a link to the results of &lt;a href=&quot;https://wtcs.triathlon.org/results/result/2022_world_triathlon_championship_finals_abu_dhabi/560516&quot;&gt;WTCS Abu Dhabi&lt;/a&gt;. What if I wanted to view all of his 10km times over the past year? Well, it looks like I can’t easily do that as a fan! That’s a shame.&lt;/p&gt;

&lt;p&gt;Has Leo participated in any other racing series? I happen to know he raced, and won, &lt;a href=&quot;https://www.ironman.com/im703-lanzarote-results&quot;&gt;Ironman 70.3 Lanzarote&lt;/a&gt;. Ironman does not provide a central database of results. This makes it difficult to discover.&lt;/p&gt;

&lt;p&gt;A good resource for a fan to discover this is the &lt;a href=&quot;https://stats.protriathletes.org/results?_gl=1*ei3nkz*_ga*MTg4NzUwNTc0OC4xNjcwNDQ2MTY1*_gid*NjI1MDMwMDkwLjE2NzEwMTMxODk.*_fplc*ZlJnUkElMkZsQ1RxT1VMTTFmWEJKMEEzaGhjJTJCYW5BbzhkYWlCcTY4ZUhBOVVkNkVTRlZPdnNiZHhJJTJGQ0IwOHd6dzQySXpodm45QlBoRHNpN0pHVk5pJTJGWG9SSTZoZFdZQkRSRTNWRm5hcjclMkZPJTJGYXV1SzNVelVEZHlSVm96R0h3JTNEJTNE*_ga_SLZSPSMLXN*MTY3MTAxMzE4OS42LjEuMTY3MTAxMzI4Ni4yOS4wLjA&quot;&gt;PTO event results&lt;/a&gt;. The PTO are making an excellent effort to collect data. Combining many long distance events with shorter distance. This is great! It is heading in the right direction but it isn’t perfect.&lt;/p&gt;

&lt;p&gt;If rumours are to be believed they do not have a good relationship with Superleague triathlon. Which could be why you cannot view Superleague results on the PTO website. This harms a fans ability to understand the sport.&lt;/p&gt;

&lt;p&gt;The PTO athlete page focuses on their ranking system. Showing me a user’s ranking progress across the last years. The ranking is applied to athletes who race long course events.&lt;/p&gt;

&lt;p&gt;I can see &lt;a href=&quot;https://stats.protriathletes.org/athlete/vincent-luis&quot;&gt;Vincent Luis’&lt;/a&gt; page here.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![PTO ranking page for Vincent Luis. It shoes his profile picture next to his name.

Below this is a box titled &quot;Ranking History&quot;. It shoes his ranking at different sports over the previous few years.

Below that is a table of results from 2022, 2021, 2020 and 2019.](https://jordanterry.co.uk/wp-content/uploads/2022/12/Screenshot-2022-12-14-at-10.44.44-1024x954.png)&lt;/figure&gt;
&lt;p&gt;I can also see &lt;a href=&quot;https://stats.protriathletes.org/athlete/georgia-taylor-brown&quot;&gt;Georgia Taylor-Brown’s&lt;/a&gt; page here.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![PTO ranking page for Georgia Taylor-Brown. It shoes her profile page next to her name.

Below this is an empty box title &quot;Ranking History&quot;.

Below that is a table of results from 2022, 2021, 2020 and 2019.](https://jordanterry.co.uk/wp-content/uploads/2022/12/Screenshot-2022-12-14-at-10.44.48-1024x1007.png)&lt;/figure&gt;
&lt;p&gt;But, as she does not race long course triathlon it shoes me a ranking. Just an empty block. It also shows her as having no skill at each discipline. It does show me some information about here previous races. I am interested to see her 5km time progressing over the past years. I can see that information here. But, I can’t breakdown or filter by that data.&lt;/p&gt;

&lt;p&gt;Another example. Vincent Luis raced Superleague last year and 70.3 Bahrain this year. What is his swim pace over 400m compared to 1.9km? The PTO display overall split data. But they do not allow you to see detailed information. This requires me to work it out myself. Is that good enough for a casual fan?&lt;/p&gt;

&lt;p&gt;Another another example. Lionel Sanders has famously struggled with the Ironman marathon. At the the Ironman World Championships at St George he put together his best Ironman. But I can’t find anywhere to easily collect marathon data and compare it over the past years.&lt;/p&gt;

&lt;p&gt;This is a very surface level look at some of the issues. I could write a 10,000 word essay going into the little details that need to be improved.&lt;/p&gt;</content><author><name>jordan_terry</name></author><category term="Sports" /><category term="Triathlon" /><summary type="html">For the amateur athlete. Triathlon is an, expensive, but accessible sport. Participating in the amateur side of the sport brings an interest in the professional side of the sport. You find your favourites, and then you want to follow them race.</summary></entry><entry><title type="html">A brief look at Gradle’s convention plugins</title><link href="http://localhost:4000/blog/a-brief-look-at-gradles-convention-plugins" rel="alternate" type="text/html" title="A brief look at Gradle’s convention plugins" /><published>2022-12-12T14:48:29+00:00</published><updated>2022-12-12T14:48:29+00:00</updated><id>http://localhost:4000/blog/a-brief-look-at-gradles-convention-plugins</id><content type="html" xml:base="http://localhost:4000/blog/a-brief-look-at-gradles-convention-plugins">&lt;p&gt;Gradle is the glue that binds our code together that allows us to build an Android application. Exposure to Gradle can range from limited to deep knowledge producing plugins. Mine currently sits somewhere in the middle. I’m currently working on levelling it.&lt;/p&gt;

&lt;p&gt;My topic of focus over the past few weeks has been &lt;strong&gt;Convention Plugins&lt;/strong&gt;. This post is the culmination of what I’ve learned and it helps me frame Convention Plugins for my mental model. This is by no means a solid resource!&lt;/p&gt;

&lt;p&gt;Multi-project applications are nearing the standard for Android codebases*. Sharing your build logic and rules across modules is important for a number of reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;As team size grows you want to maintain consistency in how modules are created&lt;/li&gt;
  &lt;li&gt;Misconfigured project can impact your task graph causing inflated build times.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;on’t &lt;strong&gt;R&lt;/strong&gt;epeat &lt;strong&gt;Y&lt;/strong&gt;ourself. The more you repeat the easier it is for a mistake to creep in. It’s even harder to make co-ordinated changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are concrete examples to help:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Applying the same Jvm source version across all modules for Java or Kotlin&lt;/li&gt;
  &lt;li&gt;Applying the same Dagger settings across all modules that require dependency injection&lt;/li&gt;
  &lt;li&gt;Applying the same Kotlin compiler flags across all Kotlin modules.&lt;/li&gt;
  &lt;li&gt;Applying a consistent min and compile SDK version for Android across modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get the idea. If you’ve been around for a while these might stick out as issues you have had to solve. Convention Plugins can help us solve these problems with idiomatic Gradle.&lt;/p&gt;

&lt;p&gt;The majority of my experience with this in the past has been to apply scripts in relevant modules, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subprojects&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allprojects&lt;/code&gt; blocks or put logic in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;buildSrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I am used to working with complicated Gradle files. Which can make fixing issues miserable! Does this look familiar?&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;pre class=&quot;wp-block-code&quot;&amp;gt;```
plugins {
    id(&quot;kotlin-android&quot;)
    id(&quot;kotlin-kapt&quot;)
  id(&quot;com.android.library&quot;)
    id(&quot;dagger.hilt.android.plugin&quot;)
}

android {
    minSdk 30
    defaultConfig {
    minSdk = 21
    targetSdk = 30
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8.toString()
        targetCompatibility = JavaVersion.VERSION_1_8.toString()
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
You may then have a similar Gradle file across many projects. Moving to Java 11 suddenly becomes a manual process. You can ease the pain by using project wide variables to hold values. You can remove the pain with a Convention Plugin.

## What is a Convention Plugin?

A convention plugin allows us to define configurations, or conventions, for builds that we re-use across a project.

A convention is represented by a Gradle script or a Plugin. They will live in a build logic module that will register plugins with Gradle. The module is then applied via your `pluginManagement` .

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;pre class=&quot;wp-block-code&quot;&gt;```
pluginManagement {
    includeBuild(&quot;build-logic&quot;)
}
```
```

Once included all projects can access your plugin.

But what can a convention plugin do? Anything a normal Gradle script or Plugin can do!

- Apply plugins to a project (e.g. Kotlin, Android plugins or Kapt)
- Configure extensions or tasks associated with an applied plugin
- Add dependencies to a project

One of the real benefits to me is that it makes Gradle build files feel more life software. You can write plugins using apply bread and butter principles like: cohesion, coupling and composition. You can write tests, making your build file feel predictable.

## A Kotlin convention plugin

Here’s a simple example of how we can create a Kotlin convention:

```
&lt;pre class=&quot;wp-block-code&quot;&gt;```
class KotlinConventionPlugin : Plugin&lt;Project&gt; {
    override fun apply(target: Project) {
        target.pluginManager.apply(&quot;org.jetbrains.kotlin.jvm&quot;)
        target.tasks.withType&lt;KotlinCompile&gt; {
             kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8.toString()
        }
    }
}
```
```

We can then add this to the build using the `build.gradle.kts` file in our `build-logic` module.

```
&lt;pre class=&quot;wp-block-code&quot;&gt;```
gradlePlugin {
    plugins {
        register(&quot;kotlinApplication&quot;) {
            id = &quot;example.kotlin&quot;
            implementationClass = &quot;KotlinConventionPlugin&quot;
        }
    }
}
```
```

A project can then apply this like any other plugin.

```
&lt;pre class=&quot;wp-block-code&quot;&gt;```
plugins {
    id(&quot;example.kotlin)
}
```
```

If you want to update the JVM target you can do that in a single file and have all projects update.

## A Hilt convention plugin

On its own, a Kotlin plugin is less exciting. I think a compelling use case is when we think about applying an annotation processor and then the libraries that use it.

When creating conventions we should split conventions logically. For example, if we want to use hilt in a project.

Hilt is a dependency injection library that uses kapt. We can write a convention plugin as follows:

```
&lt;pre class=&quot;wp-block-code&quot;&gt;```
class HiltConventionPlugin : Plugin&lt;Project&gt; {
    override fun apply(target: Project) {
    with(target) {
        with(pluginManager) {
            apply(&quot;org.jetbrains.kotlin.kapt&quot;)
            apply(&quot;dagger.hilt.android.plugin&quot;)
        }
        dependencies {
            add(&quot;implementation&quot;, &quot;com.google.dagger:hilt-android:2.44&quot;)
            add(&quot;kapt&quot;, &quot;com.google.dagger:hilt-android-compiler:2.44&quot;)
        }
    }
}
```
```

This library applies the kapt plugin, hilt plugin and adds the related dependencies. The dependencies here are hard coded as an example but you should make use of the VersionCatalog extension like this:

```
&lt;pre class=&quot;wp-block-code&quot;&gt;```
val libs = extensions.getByType&lt;VersionCatalogsExtension&gt;().named(&quot;libs&quot;)
dependencies {
    &quot;implementation&quot;(libs.findLibrary(&quot;hilt.android&quot;).get())
    &quot;kapt&quot;(libs.findLibrary(&quot;hilt.compiler&quot;).get())
}
```
```

We can register the plugin:

```
&lt;pre class=&quot;wp-block-code&quot;&gt;```
register(&quot;hiltConvention&quot;) {
    id = &quot;example.hilt&quot;
    implementationClass = &quot;HiltConventionPlugin&quot;
}
```
```

Then apply it:

```
&lt;pre class=&quot;wp-block-code&quot;&gt;```
plugins {
    id(&quot;example.hilt&quot;)
}
```
```

Now, updating the version or swapping from `kapt` to `ksp` only needs a developer to change a single plugin. Not many projects.

# Better resources

This scratches the surface. There are many incredible resources out there to help you get started.

- [Gradle docs](https://docs.gradle.org/current/samples/sample_convention_plugins.html) – A brief look at a sample use case from the folk at Square.
- [Herding Elephants by Tony Robalik](https://developer.squareup.com/blog/herding-elephants/) – A high level overview of how Square use convention plugins to make their monorepo manageable!
- [Now in Android](https://github.com/android/nowinandroid) – A fantastic resource to help you delve into a multi-project code base. This serves as a good base for you to build into more complex solutions.
- [Exploring Now in Android Gradle Convention Plugins by Adam Ahmed](https://proandroiddev.com/exploring-now-in-android-gradle-convention-plugins-91983825bcd7)
- I’d encourage reading Dan Luu’s “In defence of simple architecture” – &amp;lt;https://danluu.com/simple-architectures/&amp;gt; – to reason if your app needs many modules
&lt;/pre&gt;&lt;/pre&gt;&lt;/VersionCatalogsExtension&gt;&lt;/pre&gt;&lt;/Project&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/KotlinCompile&gt;&lt;/Project&gt;&lt;/pre&gt;&lt;/pre&gt;</content><author><name>jordan_terry</name></author><category term="Android" /><category term="Coding" /><summary type="html">Gradle is the glue that binds our code together that allows us to build an Android application. Exposure to Gradle can range from limited to deep knowledge producing plugins. Mine currently sits somewhere in the middle. I’m currently working on levelling it.</summary></entry><entry><title type="html">Type II Pain</title><link href="http://localhost:4000/blog/type-ii-pain" rel="alternate" type="text/html" title="Type II Pain" /><published>2022-09-16T09:54:22+01:00</published><updated>2022-09-16T09:54:22+01:00</updated><id>http://localhost:4000/blog/type-ii-pain</id><content type="html" xml:base="http://localhost:4000/blog/type-ii-pain">&lt;p&gt;There are two types of pain.&lt;/p&gt;

&lt;p&gt;Type I pain: Pain you don’t want. Genuine pain bought on by horrible occurrences. Illness, injury or heart break. I wouldn’t wish that on anyone. I’m lucky enough to have rarely experienced this.&lt;/p&gt;

&lt;p&gt;Type II pain: Pain you want and seek. You feel it in your lungs when you run fast. You feel it in your legs half way up that hill. Horrendous in the moment, but a drug once its done. This is pain I would wish on anyone.&lt;/p&gt;

&lt;p&gt;My problem is this: my body can sustain the pain, but my mind cannot. I recently read that the brain is the strongest muscle in the body. I find that when it is weaker than the strongest body, it is stronger.&lt;/p&gt;

&lt;p&gt;Two kilometeres into the Ironman Switzerland marathon I had I mentally capitulated. My heart rate was high and by breathing was fast and shallow. That was all it took for me to start walking. From that point onwards I was deep in Type II pain.&lt;/p&gt;

&lt;p&gt;I could argue that I wasn’t fit enough for the Ironman, I could have shuffled to the end. To do that I needed to overcome my weak brain. The Type II pain was too much. It was more pleasant to walk than run. So that is what I did.&lt;/p&gt;

&lt;p&gt;I am never walking an Ironman marathon again. To do that I need to be fit in body and mind.&lt;/p&gt;

&lt;p&gt;Training your body to be better requires you to do the movements you want to be better. Over and over, consistently over time.&lt;/p&gt;

&lt;p&gt;The same applies to your brain. I need to experience more Type II pain and challenge myself to persist through it.&lt;/p&gt;

&lt;p&gt;As I am sat here typing this I am so eager to tackle a training session that will give me the pain I want. Tomorrow morning I have a tough interval run.&lt;/p&gt;

&lt;p&gt;Will I be happy about the Type II pain in the final interval as I grit my teeth? I doubt it. If I can get through it with the my brain improved. Able to endure another few seconds of Type II than I could yesterday. It was a success.&lt;/p&gt;</content><author><name>jordan_terry</name></author><category term="Sports" /><category term="Triathlon" /><summary type="html">There are two types of pain.</summary></entry><entry><title type="html">Ironman Switzerland D-20</title><link href="http://localhost:4000/blog/ironman-switzerland-d-20" rel="alternate" type="text/html" title="Ironman Switzerland D-20" /><published>2022-06-20T20:59:50+01:00</published><updated>2022-06-20T20:59:50+01:00</updated><id>http://localhost:4000/blog/ironman-switzerland-d-20</id><content type="html" xml:base="http://localhost:4000/blog/ironman-switzerland-d-20">&lt;p&gt;Twenty days out from Ironman Switzerland. I signed up to this race in 2019. I can’t believe it is so close now!&lt;/p&gt;

&lt;p&gt;The past two years have been rocky. Injuries and illness have plagued me. I spent October to March injured and unable to run or cycle without causing pain. But since April things have been on an upward trend.&lt;/p&gt;

&lt;p&gt;Watching time tick by and an event get closer whilst not being able to train for it is not good for the motivation. It seems like in this case, my body recovered before my mind.&lt;/p&gt;

&lt;p&gt;I think over the last month and a half I have been able to train okay-ish and drag my body into shape. I may be a bit overweight and I haven’t eaten perfectly. But, I am going to be okay.&lt;/p&gt;

&lt;p&gt;Four weeks ago I flew out to Marbella to take part in the half ironman. It didn’t go too well! I think the main reason is having swallowed a lot of water on the swim and not being able to eat. But I’m not willing to discard the fact that I could have still been out of shape!&lt;/p&gt;

&lt;p&gt;Getting back from Marbella I knew I had seven weeks until Switzerland and I wasn’t going to waste them. Lets look at how I did.&lt;/p&gt;

&lt;p&gt;First week back involved resting and taking it easy.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/Screenshot-2022-06-20-at-20.52.26-1024x318.png)&lt;/figure&gt;
&lt;p&gt;The main issue was missing an open water swimming session. I don’t live near a lake and it is hard to motivate myself to get to one. This is a recurring issue and I regret it coming into Switzerland. Next time though..!&lt;/p&gt;

&lt;p&gt;Second week back was a big one.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/Screenshot-2022-06-20-at-20.53.03-1024x470.png)&lt;/figure&gt;
&lt;p&gt;I had some time off that should have been used for a trip to San Francisco. I didn’t go in then end and I was able to use some time off to get some serious training done. I also had a trip home and again.. didn’t get my open water swim done. I did however spend 5 hours on the turbo.&lt;/p&gt;

&lt;p&gt;Third week, almost epic!&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/Screenshot-2022-06-20-at-20.53.35-1024x432.png)&lt;/figure&gt;
&lt;p&gt;Had some wobbles on the water mid-week. But generally things looked good. I like my running had improved this week. I saw my heart rate drop lower than usual on my runs. Moving in the right direction.&lt;/p&gt;

&lt;p&gt;Missed a three hour bike session the morning before Windsor Triathlon. Lazy.&lt;/p&gt;

&lt;p&gt;Fourth week, epic.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/Screenshot-2022-06-20-at-20.54.04-1024x518.png)&lt;/figure&gt;
&lt;p&gt;Biggest week of TSS I think I have ever done. I swam 4km for the first time ever in the pool (better late than never!). Lots of cycling on the turbo, which proved a challenge during a heatwave. Saturday I put in a 4 hour session with ~2,200m of climbing.&lt;/p&gt;

&lt;p&gt;Sunday I woke up ill. I dragged myself off the sofa and around a 1h 30m run, but it wasn’t great!&lt;/p&gt;

&lt;p&gt;Fifth Week, needed rest but consistent work.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/Screenshot-2022-06-20-at-20.58.17-1024x338.png)&lt;/figure&gt;
&lt;p&gt;Feeling ill today! An absolutely dreaded feeling so close to an event. I’ve been plugging cough medicine and lemsip.&lt;/p&gt;

&lt;p&gt;Can’t wait to get stuck into this week though.&lt;/p&gt;</content><author><name>jordan_terry</name></author><category term="Sports" /><category term="Triathlon" /><summary type="html">Twenty days out from Ironman Switzerland. I signed up to this race in 2019. I can’t believe it is so close now!</summary></entry><entry><title type="html">Windsor Triathlon 2022</title><link href="http://localhost:4000/blog/windsor-triathlon-2022" rel="alternate" type="text/html" title="Windsor Triathlon 2022" /><published>2022-06-20T18:55:31+01:00</published><updated>2022-06-20T18:55:31+01:00</updated><id>http://localhost:4000/blog/windsor-triathlon-2022</id><content type="html" xml:base="http://localhost:4000/blog/windsor-triathlon-2022">&lt;p&gt;Back in 2019 Thais (my girlfriend) and a friend of hers did the Windsor Triathlon. They bought me in as coach and supporter for the day. It was fantastic. I am pretty sure there is no better way to spend a Sunday than wake up at 4:30 and go and watch people do a triathlon.&lt;/p&gt;

&lt;p&gt;As soon as they finished I was whipping out the credit card for the 2020 race. You all know what happened next.. We’re now in 2022 for the next edition of the race.&lt;/p&gt;

&lt;p&gt;After two years of illness and injury. Training for canceled events. I was over the moon to be lining up for triathlons in 2022. (We don’t talk about my trip to Marbella).&lt;/p&gt;

&lt;p&gt;Windsor is an Olympic distance: 1.5km swim, 40km bike and 10km run. I had never done one before, so it was great to tick one off.&lt;/p&gt;

&lt;p&gt;Thais had also registered. It was fun signing up to do an event together. She definitely doesn’t like triathlon as much as me (she doesn’t seem to like watching the whole 8 hours of the Ironman World Champs at Kona??). But, she does enjoy throwing herself into a challenge.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![Lots of bikes racked up and ready to go. ](https://jordanterry.co.uk/wp-content/uploads/2022/06/1DC04E6A-CF47-41BE-B552-8441528B0D50-1024x576.jpg)&lt;figcaption class=&quot;wp-element-caption&quot;&gt;Bike racked&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;The Windsor triathlon requires you rack your bike up the day before. So Saturday morning we found ourselves on the way to Windsor to drop off the bikes. I had overslept and missed a scheduled three hour turbo session (this still bothers me). Thais had a 6:30am start so we’d booked a hotel for the night.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![Thais giving the thumbs up sign. Bike helmet on with sunglasses. Looking effortlessly cool](https://jordanterry.co.uk/wp-content/uploads/2022/06/IMG_6691-768x1024.png)&lt;/figure&gt;
&lt;p&gt;Dropping off the bikes was a smooth process. I got some free nutrition and stared at bikes. After dropping off the bikes we headed to Richmond for an afternoon tea for my Mum’s birthday.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/IMG_6694-768x1024.png)&lt;/figure&gt;
&lt;p&gt;Perfect carb loading if you ask me.&lt;/p&gt;

&lt;p&gt;Once back in Windsor it was time for a Wagamamas and then an early bed.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/WhatsApp-Image-2022-06-11-at-8.03.41-PM-edited.jpeg)&lt;figcaption class=&quot;wp-element-caption&quot;&gt;Always wanted to do one of these photos&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Triathlon mornings are great. Alarm set for before 5am, a peaceful morning snack, a nice coffee. Slight panic as you realise time has flown by and it is less than 30 minutes until your girlfriends start time! (Also branding hair is so difficult).&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/WhatsApp-Image-2022-06-12-at-4.09.40-PM-768x1024.jpeg)&lt;figcaption class=&quot;wp-element-caption&quot;&gt;Who doesn’t like being up this early?!&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;It wasn’t long until I dropped off Thais and waved her off. She looked a bit nervous, but she was going to do great.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/IMG_6711-1024x768.png)&lt;figcaption class=&quot;wp-element-caption&quot;&gt;What a poser&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;I watched her wave get going and then wondered back to transition. I still had an hour to go until I started! Plenty of time to spend queuing for the porta-loo (if this is your first triathlon blog post, everyone talks about porta-loos). I then watched Thais finish the swim and get out onto the bike.&lt;/p&gt;

&lt;p&gt;I felt so proud seeing her finish, she’d spent the last week feeling ill with a (non-covid) cough.&lt;/p&gt;

&lt;p&gt;With time ticking, I donned my wet suit and started loitering with a bunch of others in my wave.&lt;/p&gt;

&lt;p&gt;The swim start was a bunch start from a buoy, getting there involved a small obstacle course down from a grassy bank onto a pontoon and then into the water. The water was.. warm! I did not expect that at tool.&lt;/p&gt;

&lt;p&gt;The Windsor triathlon is pretty cool. You are swimming in the river Thames. The start is about 600m down from transition and you swim with the current about 1,000m down to the Windsor bridge. From the bridge you turn and swim against the current back to transition.&lt;/p&gt;

&lt;p&gt;Something I didn’t not in my prep was that for the first 1,000m you swim facing the rising sun. My completely clear goggles were not suited for this! I swam most of the swim blind, sticking to other swimmers feet. Working out where to turn was a mystery. The last part of the swim back up the river felt like it took an age. Windsor has a couple of small islands dotting the side of the river. I found it quite disorientating and strange to work out how far back up the river I was. I also had no sign of how I had swum. I was amongst the pink hats of the wave before me. I could also see some blue hats from the wave behind me. I had no idea if that was good.&lt;/p&gt;

&lt;p&gt;I found myself climbing out of the water. I checked my watch and saw 30 minutes. Disappointed, I thought 28 minutes was on the cards. But, I did swim roughly 100m extra. So.. it wasn’t too bad. But I must work harder on my swimming.&lt;/p&gt;

&lt;p&gt;A few weeks ago I was in Marbella for a half ironman. My day went south when I swallowed a mouthful of sea water. It caused my horrible stomach cramps for the entire bike and meant I could not run.&lt;/p&gt;

&lt;p&gt;Here, I had swallowed some of the Thames and I felt SO much better than last time. Absolute relief.&lt;/p&gt;

&lt;p&gt;The transition was long.. clocking in at 6 minutes. It felt like I was running for a long time to get to my bike, and then I ran even longer to get out of transition. Transition times were long here! Must improve.&lt;/p&gt;

&lt;p&gt;Once out of the bike, we were onto roads not closed for the event. This was a new experience for me. It made me more appreciative of the Ironman events with closed roads. Ironman sure are expensive, but I get it.&lt;/p&gt;

&lt;p&gt;The Windsor triathlon bike course takes you out of Windsor and onto a short two lap section, from where you head back into Windsor.&lt;/p&gt;

&lt;p&gt;The first section winds through some housing as you ride away from the Thames. I took the opportunity to get my heart rate down before we hit the rolling roads.&lt;/p&gt;

&lt;p&gt;It was on these rolling roads that I was able to attach myself to the rear of a group of riders (outside the drafting zone, don’t worry!). What a joy, my swim is normally so slow I don’t see anyone! We were soon picking our way through riders on their second lap.&lt;/p&gt;

&lt;p&gt;I kept losing touch on the steeper parts of the climbs (worrying considering I have an Ironman in Switzerland soon 🏔). As we came onto the second lap I misread the road signs and took a wrong turn. This meant navigating a bit of traffic and doing a 270 degree turn to get myself back on track. Unfortunately, that blunder meant I did not see that group again at all!&lt;/p&gt;

&lt;p&gt;On the second lap I was still passing a lot of riders, rarely passed myself. This was a great feeling! I did have someone draft me for a while as we hit a headwind. He promptly passed and dropped me at the top of a climb.&lt;/p&gt;

&lt;p&gt;Heading back into Windsor was mega. There are some nice long roads that you can really pick up the pace on. The final twisty section before transition was an odd one. With live roads I found myself being held up a fair bit. I also saw a fair few triathletes giving motorists a hard time. Its like they forgot about they weren’t the only people on the road. Never thought I’d find myself defending motorists!&lt;/p&gt;

&lt;p&gt;Once off the bike it was a case of getting on with the run.&lt;/p&gt;

&lt;p&gt;The run is a bit of an unknown for me. I’ve been running extremely easy for months now. I don’t want to aggravate my calf in the lead up to Switzerland. So of course I set of at what I thought might be an unreasonable pace. For a short period of time the hope of a 10km PB was on the horizon.&lt;/p&gt;

&lt;p&gt;The Windsor run course is a three lap affair. With two climbs on each lap. Walking up the climbs the night before they looked pretty daunting. But, on the day they felt flat! I couldn’t believe it, I had been running hills a lot in training and it seemed to have paid off!&lt;/p&gt;

&lt;p&gt;Unfortunately, my trademark stomach issues started kicking in. Not wanting to cause an incident, I dialled things back and decided to get myself around in a sub-50 minute 10km. I want and know I am capable of more.&lt;/p&gt;

&lt;p&gt;The highlight of the run was seeing Thais a couple of times on the run. Extremely proud to see her get across the finish line. She has a half Ironman coming up in October so this is a good confidence booster.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/06/WhatsApp-Image-2022-06-12-at-4.09.39-PM-768x1024.jpeg)&lt;figcaption class=&quot;wp-element-caption&quot;&gt;Two happy triathletes.&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;I was just happy to have finished an event. I finished the Windsor triathlon in 2 hours 43 minutes. It wasn’t a perfect day out and I am sure I had more in the tank. The whole day was a comfortable effort, I think a 2h 30 was on the cards if I had been willing to suffer more.&lt;/p&gt;

&lt;p&gt;I had to use my imagination and dreams of completing goals to get myself through a tough year or so. Actually succeeding at an event feels like I have had my tank of motivation and enthusiasm top-ed up.&lt;/p&gt;

&lt;p&gt;Next up, Switzerland. I am absolutely bouncing off the walls with excitement right now.&lt;/p&gt;</content><author><name>jordan_terry</name></author><category term="Sports" /><category term="Triathlon" /><summary type="html">Back in 2019 Thais (my girlfriend) and a friend of hers did the Windsor Triathlon. They bought me in as coach and supporter for the day. It was fantastic. I am pretty sure there is no better way to spend a Sunday than wake up at 4:30 and go and watch people do a triathlon.</summary></entry><entry><title type="html">Practical Modularisation for Android Developers</title><link href="http://localhost:4000/blog/practical-modularisation-for-android-developers" rel="alternate" type="text/html" title="Practical Modularisation for Android Developers" /><published>2022-01-30T19:54:03+00:00</published><updated>2022-01-30T19:54:03+00:00</updated><id>http://localhost:4000/blog/practical-modularisation-for-android-developers</id><content type="html" xml:base="http://localhost:4000/blog/practical-modularisation-for-android-developers">&lt;p&gt;Modularisation.. You cannot escape it as an Android Developer. As your code base gets larger well modularised code becomes crucial.&lt;/p&gt;

&lt;p&gt;It can encourage code ownership, increased build speed, better organisation and increased productivity.&lt;/p&gt;

&lt;p&gt;In a blog post a couple of months ago I focused on how &lt;a href=&quot;https://jordanterry.co.uk/modular-indirection&quot;&gt;modular indirection&lt;/a&gt; can improve project builds. Looking back on that post it is very “theory” heavy. I figured it would be nice to look at some practical aspects of modularisation.&lt;/p&gt;

&lt;p&gt;I am relying on you having read my previous blog post. But if you don’t want to spend 10 minutes reading another blog post just to spend another 10 minutes here, I can give you a brief synopsis.&lt;/p&gt;

&lt;p&gt;I am pursing the idea of splitting a code base into modules consisting of at least two modules: and api module and an implementation module. Api contains abstractions and your implementation contains concretions. The end result is a code base that should be easy to understand and quick to build.&lt;/p&gt;

&lt;p&gt;Personally, I find modularisation is a huge topic and it getting a grasp on it is difficult. It encompasses Gradle, dependency injection, code architecture, builds, everything really. Implementing that is actually difficult.&lt;/p&gt;

&lt;p&gt;This blog post continues the theme of adopting an api and implementation.&lt;/p&gt;

&lt;p&gt;I want this post to be useful to those who work on a monolithic codebase and want to modularise. Also those who have a modularised code base but aren’t seeing the benefits they wanted.&lt;/p&gt;

&lt;p&gt;When you’ve finished this post I want you to take two things from it.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You should be able to create a plan to increase modularisation.&lt;/li&gt;
  &lt;li&gt;You can make use of tooling to modularise your codebase&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Without further ado, lets get to it.&lt;/p&gt;

&lt;h2 id=&quot;coming-up-with-a-plan&quot;&gt;Coming up with a plan&lt;/h2&gt;

&lt;p&gt;Modularising a code base is time complex and time consuming. It is a huge project that will impact your entire codebase.&lt;/p&gt;

&lt;p&gt;Some of you work in large companies with foundation teams. Others will be working in small companies within a small team. All have stakeholders. Many of whom will rightly raise questions if you tell them you are going to re-architect your app. Especially with no forward facing changes. At the end of the day, your job is to deliver what others want us to do in our application.&lt;/p&gt;

&lt;p&gt;If you are going to convince them its a good idea we need to come up with a plan. You wouldn’t just replace RxJava with Flow, Gson with Moshi or Volley with OkHttp. You’d research it, prove it is a good idea, and prove why it is a good idea. If you have a good mental model of what your stakeholders want you can align the benefits to them.&lt;/p&gt;

&lt;p&gt;When it comes to modularisation, you should think about the key problems you are going to solve. Is it code ownership, build times, high coupling or something else?&lt;/p&gt;

&lt;p&gt;Twitter has an environment of writing request for comments or 1-pagers. This is a fantastic way of spelling out your goals and to drill into the problems you are looking at. This is a good place to explore improvements specific to your code base. Create some examples or a small test project and share it in your team. When you are satisfied you can build your plan for the entire project. You can create a set of goals with explicit tasks to work towards. Put these into a document and refer to the document when you begin work. This will act as a north star for you and your team that you can all refer to.&lt;/p&gt;

&lt;p&gt;Coming up with a plan is not specific to modularising a code base. This is a good practice for any software project. Doing this gives us time to think about what we are doing. There is a lot of value in thinking, rather than just doing.&lt;/p&gt;

&lt;h3 id=&quot;think-about-your-foundation&quot;&gt;Think about your foundation&lt;/h3&gt;

&lt;p&gt;If you are starting from a monolithic code base I have some suggestions for a good starting point. You should start by removing your foundational pieces from your monolithic codebase.&lt;/p&gt;

&lt;p&gt;Think about it like this, if you are starting a new project you add your foundation first. You add networking, databases, analytics or serialisation before working on the features. We aren’t starting a new project, but we should replicate this.&lt;/p&gt;

&lt;p&gt;Modularising a feature first will be troublesome. You’ll be trying to strip to reference foundational pieces without referencing your monolith. It gets gnarly, trust me.&lt;/p&gt;

&lt;p&gt;I have found it overwhelming looking at a huge monolith. Untangling this spaghetti code is frustrating, but stick at it and you’ll work it out. To get a head start look into the network stack, analytics code, UI code or even utility code.&lt;/p&gt;

&lt;h4 id=&quot;a-note-on-networking-code&quot;&gt;A note on networking code&lt;/h4&gt;

&lt;p&gt;A common approach I have seen is to add your api models in the network layer. This is a mistake, especially in a larger code base.&lt;/p&gt;

&lt;p&gt;You don’t want your shopping cart module to have access to models in your login process. This is what having all models in a single module will introduce. You will pollute your code completion name space. It also leads to more incremental re-compilation should a model change.&lt;/p&gt;

&lt;p&gt;A pattern I have seen at Twitter is the idea of adding modules named :model and :json. It sits alongside :api and :implementation modules. It keeps your network models and domain models in a nice logical place.&lt;/p&gt;

&lt;h2 id=&quot;gradle&quot;&gt;Gradle&lt;/h2&gt;

&lt;p&gt;For most Android developers, Gradle is the key to this whole process. Modularisation means creating more Gradle projects. We use the name modules a lot in Android, really it is an alias for a Gradle project.&lt;/p&gt;

&lt;p&gt;I don’t know about you guys, but for a long time I was a bit scared of Gradle. I didn’t really know what it was doing or understand how it plugs together.&lt;/p&gt;

&lt;p&gt;If you have ever felt the same or are currently a bit confused about Gradle I want this section to help make it easier. Modularising your code base will involve creating and moving Gradle projects about. Being confident doing this is important.&lt;/p&gt;

&lt;p&gt;Gradle’s nomenclature is projects, Android developments is projects. Module is a better name for this blog post. From now on I shall use module.&lt;/p&gt;

&lt;p&gt;A module is straightforward. The basic skeleton is a folder containing a single build.gradle.kts file.&lt;/p&gt;

&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter size-full&quot;&gt;&lt;image src=&quot;https://jordanterry.co.uk/wp-content/uploads/2022/01/Capture-decran-2022-01-30-194157.png&quot; /&gt;&lt;figcaption&gt;Modules structures containing build.gradle.kts files&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;To turn this module skeleton into a full module we need to reference to it from a project settings.gradle. Here is an example from a project I am working on, at the bottom you can see a manifest of all Gradle modules being declared.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;pre class=&quot;wp-block-code&quot;&amp;gt;```
rootProject.name = 'scheduler'
enableFeaturePreview(&quot;VERSION_CATALOGS&quot;)
apply from: 'buildSrc/dependencies.gradle.kts'

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        mavenCentral()
    }
}

include 'apps'
include 'core'
include 'apps:planner'
include 'core:flight-aware:api'
include 'core:flight-aware:json'
include 'core:flight-aware:implementation'
include 'core:flight-aware:implementation-fake'
include 'core:flight-aware:di'
include 'core:flight-aware:di-fake'
include 'core:flight-aware'
include 'core:networking:api'
include 'core:networking:implementation'
include 'core:networking:di'
include 'core:networking'
include 'core:billing:api'
include 'core:billing:implementation'
include 'core:billing:di'
include 'core:billing'
include 'core:flightplan-generator:api'
include 'core:flightplan-generator:implementation'
include 'core:flightplan-generator:di'
include 'core:flightplan-generator'
include 'core:schema'
include 'core:xml-parser'
include 'core:xml-parser:api'
include 'core:xml-parser:implementation'
include 'core:xml-parser:di'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;And finally, we need to add a source directory to it.&lt;/p&gt;

&lt;p&gt;A module is a set of folders, in the case of an api and implementation it might be a nested structure. But we reference them using colons instead of slashes. “core/xml-parser/api” becomes “core:xml-parser:api”.&lt;/p&gt;

&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter size-full&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/01/Capture-decran-2022-01-30-194605.png)&lt;figcaption&gt;A number of modules containing source sets&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;When syncing a project Gradle uses settings.gradle as a manifest for all projects. Don’t forget to add your module here.&lt;/p&gt;

&lt;p&gt;The build.gradle.kts file in your module defines the type of module. Applying a plugin defines if it is a Kotlin, Java or Android module.&lt;/p&gt;

&lt;p&gt;The plugin applied defines the tasks that could be run during compilation.&lt;/p&gt;

&lt;p&gt;I’d encourage you to create a new project and spending time manually creating modules. This could sound boring, but it will help you to understand what happens under the hood. In practice, you should use the “Add Module” wizard in the IDE. But you should have a good understanding of what happens under the hood.&lt;/p&gt;

&lt;p&gt;With that basic set up I have a few module tips to share with you.&lt;/p&gt;

&lt;h3 id=&quot;favour-jvm-modules-over-android-modules&quot;&gt;Favour JVM modules over Android modules&lt;/h3&gt;

&lt;p&gt;Where you can, favour plain Java or Kotlin modules rather than modules that use Android. When you hit the compile button each module has to run through many tasks. We should consider the tasks being compiled.&lt;/p&gt;

&lt;p&gt;A Java module must run javac to convert your classes to JVM Bytecode. A Kotlin module must run kotlinc to convert your code to Kotlin IR and then JVM bytecode. An Android module must run kotlinc to convert your classes to Kotlin IR, then JVM bytecode and then dex it for the Android runtime. That sounds tiring!&lt;/p&gt;

&lt;p&gt;It is wasteful running these tasks on modules that may not require it. Does your networking layer do anything that means it should specifically for Android?&lt;/p&gt;

&lt;p&gt;If your target module is an Android library or application the Android steps will be done there. We do not need to do it for each module.&lt;/p&gt;

&lt;p&gt;Doing this in each module might not sound dramatic. But if you had many modules running Android specific tasks you could imagine the impact. Not only does this impact incremental compilations, but even clean builds.&lt;/p&gt;

&lt;p&gt;You should ensure your foundational modules, referenced across the application do not know about Android. This will benefit you in the long run.&lt;/p&gt;

&lt;p&gt;To take this a step further, you should take time to think whether any module referring to these JVM modules really needs to know about Android. If it doesn’t, you can change the applied plugin from Android to JVM.&lt;/p&gt;

&lt;p&gt;A word of warning, if a JVM module is referring to an Android module it will not work. So keep an eye out for this.&lt;/p&gt;

&lt;h3 id=&quot;sync-less-often&quot;&gt;Sync less often&lt;/h3&gt;

&lt;p&gt;This won’t apply to everyone. But if you work in a very large codebase reduce syncing whilst modularising.&lt;/p&gt;

&lt;p&gt;You might be breaking your :big-feautre module into :big-feature:api, :big-feature:implementation and :big-feature:di. Don’t sync after you’ve created each module. Set up the structure without using the IDE tooling and sync when you are confident you have things set up as you’d like.&lt;/p&gt;

&lt;p&gt;This is a marginal gain, but will likely save you time and frustration. The Twitter for Android app has roughly 800 modules. Gradle sync currently takes about a minute. Modularising a code base is a long slog, don’t exhaust yourself by waiting for Gradle to sync.&lt;/p&gt;

&lt;p&gt;If you can set up the base structure of an api/implementation module without syncing every time you add a module, you will be happier. You might also get a little dopamine hit doing it manually and seeing a successful sync.&lt;/p&gt;

&lt;h2 id=&quot;android-studio&quot;&gt;Android Studio&lt;/h2&gt;

&lt;p&gt;Android Studio gets a lot of flack, in my opinion quite unfairly. It gives us a lot of tools that make our lives easier. Android Studio builds upon IntelliJ, providing helpful tooling that makes modularisation easy.&lt;/p&gt;

&lt;p&gt;I warn you now, the tools I will suggest are not ground breaking. You may already be using them. But after this section I’ll suggest a couple of workflows that will combine the tooling.&lt;/p&gt;

&lt;h3 id=&quot;project-structure&quot;&gt;Project Structure&lt;/h3&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/01/Capture-decran-2022-01-30-195454-1024x553.png)&lt;figcaption&gt;The Project Structure dialog, providing a tree user interface to view your module structure with.&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;The project structure dialog is an excellent way to visualise modules in your code base. It is a bit like the settings.gradle file we saw above. It gives us a UI to navigate and visualise nesting.&lt;/p&gt;

&lt;p&gt;Within the Project Structure dialog contains a wizard for creating new modules. It abstracts away from the details of Gradle and makes it painless to create modules. I do encourage using this, but make sure you know what happens under the hood.&lt;/p&gt;

&lt;p&gt;One note of caution. Adding a new project starts a Gradle sync for you. If you work in a large code base this can become a productivity killer.&lt;/p&gt;

&lt;p&gt;If you are adding a new module and then an api, implementation and di module. You could easily be doing this for 10 minutes.&lt;/p&gt;

&lt;p&gt;I’m repeating what I mentioned above, but creating a multi-module set up and then syncing is useful.&lt;/p&gt;

&lt;p&gt;Over time, this project structure view will become valuable to you as you tame a large project.&lt;/p&gt;

&lt;h3 id=&quot;extract-interface&quot;&gt;Extract Interface&lt;/h3&gt;

&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter size-full&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/01/Capture-decran-2022-01-30-195729.png)&lt;figcaption&gt;Refactor -&amp;gt; Extract Interface&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Extract Interface is very powerful for those who are already in a modularised code base. Using the Extract Interface codebase makes it easy to split concretions.&lt;/p&gt;

&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter size-full&quot;&gt;![IntelliJ screenshot of the Extract Interface dialog.](https://jordanterry.co.uk/wp-content/uploads/2022/01/Capture-decran-2022-01-30-195756.png)&lt;figcaption&gt;The Extract Interface dialog, demonstrating some of the options&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;The tool allows us to extract a set of functions from a concrete class into a separate class. It will then rewrite your concretion and apply the interface to it. You also have an option to move your interface to another location. Like an api module, for example.&lt;/p&gt;

&lt;p&gt;This one tool can do half of your work for you. It is a real productivity booster.&lt;/p&gt;

&lt;h3 id=&quot;move&quot;&gt;Move&lt;/h3&gt;

&lt;figure class=&quot;wp-block-image size-full&quot;&gt;![](https://jordanterry.co.uk/wp-content/uploads/2022/01/Capture-decran-2022-01-30-200222.png)&lt;figcaption&gt;The Move Dialog.&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;“Move” is useful when you already have abstractions. When you select a class or classes you can move them.&lt;/p&gt;

&lt;p&gt;This is the second part of the “Extract Interface” defined above. Using this tool makes it easy to move classes throughout your code base.&lt;/p&gt;

&lt;h2 id=&quot;workflows&quot;&gt;Workflows&lt;/h2&gt;

&lt;p&gt;I want to propose a couple of workflows for you to play around with. My long term goal is to create tooling to compose the tools and tips above together. But, that isn’t necessary. If we follow some straightforward steps you can make modularisation a bit easier.&lt;/p&gt;

&lt;p&gt;I haven’t proposed anything ground breaking above. But when composed together into a workflow they are useful. It makes it easy to apply an api/implementation architecture.&lt;/p&gt;

&lt;h3 id=&quot;migrating-from-a-monolith&quot;&gt;Migrating from a monolith&lt;/h3&gt;

&lt;p&gt;A few years back I would have expected this to be the most common use case. But browsing android projects on Github, I see many moularised projects. But I expect a lot of readers to still have monoliths. How can we compose separate tools together and break it apart?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;First, we create a plan. We keep digging into this code base and try to find a few foundational modules.&lt;/li&gt;
  &lt;li&gt;Choose a foundational feature that will be depended on a lot, but have as few dependencies on anything else in your project.&lt;/li&gt;
  &lt;li&gt;Create a module that will contain your new feature. Add a :api, :implementation and :di module.&lt;/li&gt;
  &lt;li&gt;Move any dependencies that your new module depends upon to your new module. If your monolith is going to still depend upon any dependencies. You have a choice:
    &lt;ol&gt;
      &lt;li&gt;If the dependency should eventually be hidden in your implementation, move it to be an api dependency in your :api module. Take note of it and plan to remove any leaking across boundaries&lt;/li&gt;
      &lt;li&gt;If the dependency does still belong in your monolith, keep the dependency there.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;If your foundational classes are currently all concrete. Use “Move classes” to move everything to the implementation module.&lt;/li&gt;
  &lt;li&gt;If your foundational classes contain a mixture of abstractions and concretions use “Move classes” the abstractions to api and concretions to implementation.&lt;/li&gt;
  &lt;li&gt;Move dependency injection code to your DI module with “Move classes”.&lt;/li&gt;
  &lt;li&gt;You might see a lot of red right now. Don’t worry!&lt;/li&gt;
  &lt;li&gt;If you have any concretions that should be exposed in your api. Use “Extract interface” to extract and move an API to your api module&lt;/li&gt;
  &lt;li&gt;Update any dependency injection classes to refer to the correct classes.&lt;/li&gt;
  &lt;li&gt;Ensure your monolithic module is correctly wired up to your new modules. You will find yourself adding implementation and api modules to the monolith as we start.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Applying this process once won’t bring you immediate improvements. But over time, by repeating this you will eventually see the build improvements you want.&lt;/p&gt;

&lt;h3 id=&quot;migrating-from-a-module&quot;&gt;Migrating from a module&lt;/h3&gt;

&lt;p&gt;You’ll find this isn’t so dissimilar to the workflow above. We will take an existing module into an :api and an :implementation. This should not be very destructive and should involve fewer changes. You have already done the hard work of extracting this code from a monolith.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use the Project Structure dialog to add an :api, :implementation and :di module as children to your current module.&lt;/li&gt;
  &lt;li&gt;Move your dependencies down into the implementation. If you have any “api” implementations, move that to your api module and take note to fix this.&lt;/li&gt;
  &lt;li&gt;If all classes are concret. Use “Move classes” to move everything to the implementation module.&lt;/li&gt;
  &lt;li&gt;If your classes contain a mixture of abstractions and concretions use “Move classes” the abstractions to api and concretions to implementation.&lt;/li&gt;
  &lt;li&gt;Move dependency injection code to your DI module with “Move classes”.&lt;/li&gt;
  &lt;li&gt;You might see a lot of red right now. Don’t worry!&lt;/li&gt;
  &lt;li&gt;Replace any usages of this module to reference the api module and then add your di module to wherever you are building your dependency injection graph.&lt;/li&gt;
  &lt;li&gt;Fix any remaining issues.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This seems simple, because it is! You will, of course, run into issues whilst implementing this. By following these steps the issues should not be too difficult to resolve.&lt;/p&gt;

&lt;h2 id=&quot;not-exhaustive&quot;&gt;Not exhaustive&lt;/h2&gt;

&lt;p&gt;If you’ve read to this part of the post you have entertained my musings for far too long. I hope you step away from this with a good idea of how to do a few things.&lt;/p&gt;

&lt;p&gt;If you haven’t begun modularising your code base you will now think look at your code base and understand the foundational pieces of code that you can break apart and begin the process of creating a modularised code base.&lt;/p&gt;

&lt;p&gt;You’ll feel a bit more comfortable thinking about Gradle modules. You might think it was odd to focus on this as much as I have, but I think this is something we must all be comfortable with.&lt;/p&gt;

&lt;p&gt;You can also make use of three very simple pieces of functionality in Android Studio to accelerate your modularisation process. When combined together into one of the two workflows I have suggested you can effectively re-organise your code base.&lt;/p&gt;

&lt;p&gt;That’s all I have for now. Ciao!&lt;/p&gt;</content><author><name>jordan_terry</name></author><category term="Android" /><category term="Coding" /><summary type="html">Modularisation.. You cannot escape it as an Android Developer. As your code base gets larger well modularised code becomes crucial. It can encourage code ownership, increased build speed, better organisation and increased productivity. This post will help you to use the tooling available to you to modularise your codebase.</summary></entry><entry><title type="html">Waxing lyrical about Twitter</title><link href="http://localhost:4000/blog/waxing-lyrical-about-twitter" rel="alternate" type="text/html" title="Waxing lyrical about Twitter" /><published>2022-01-20T23:02:16+00:00</published><updated>2022-01-20T23:02:16+00:00</updated><id>http://localhost:4000/blog/waxing-lyrical-about-twitter</id><content type="html" xml:base="http://localhost:4000/blog/waxing-lyrical-about-twitter">&lt;p&gt;Twitter has been ever present in my life since I found out what a smart phone was. Alongside an AR night sky app, it was one of the first apps I downloaded. Getting excited about apps like this led me to become an app developer.&lt;/p&gt;

&lt;p&gt;My current &lt;a href=&quot;https://twitter.com/JordNullable&quot;&gt;Twitter&lt;/a&gt; account is new (follow me, I need those follows). I deleted my old one by taking a month out of social media back in January 2021 and having my account deleted (oops!) Regardless, for me, Twitter is technology.&lt;/p&gt;

&lt;p&gt;You can imagine how excited I have been to join the company as an Android developer. I’m working on the team responsible for Twitter Blue. We are a small cog in the machine trying to de-couple Twitter from advertising money.&lt;/p&gt;

&lt;p&gt;Since joining, I’ve been thinking about the place Twitter has had in my life so far. A 10+ year relationship with an app is not something to turn your nose at after all.&lt;/p&gt;

&lt;p&gt;I’ve met friends on Twitter some of whom have moved into “IRL”, as the kids say. I’ve learned about new technologies on Twitter and it has directed my career.&lt;/p&gt;

&lt;p&gt;Twitter has had a large impact on my world view. To me, despite the platforms issues, this makes it important. I’ve tried to convert some thoughts into words on this topic:&lt;/p&gt;

&lt;p&gt;Video footage of the aftermath of Sully Sullenberger landing an A320 into the Hudson is a landmark event on Twitter. It is the first time a normal (non-journalist) broke a huge story on the platform.&lt;/p&gt;

&lt;p&gt;This happened before I joined Twitter, I don’t remember finding out about it on there. I do remember the discussions of citizen journalists. That is something that sticks in my head.&lt;/p&gt;

&lt;p&gt;Over the next decade I have consumed more and more news through the platform. I remember a lot of things vividly as the happened during my late-teens up to my mid-twenties.&lt;/p&gt;

&lt;p&gt;I remember the Arab Springs. From: images of Mohamed Bouazizi; the Jasmine revolution; protest and celebration in Tahrir Square, and the horrors of Syria. I would “excitedly” refresh Twitter for developments as the Arab world turned to night.&lt;/p&gt;

&lt;p&gt;It took me time to mature and to learn before I understood what happened in the Springs. A lot of this learning happened from news and opinions shared on Twitter.&lt;/p&gt;

&lt;p&gt;I’ve started to see Twitter as a platform that can help a normal person share their voice.&lt;/p&gt;

&lt;p&gt;I remember scrolling through the &lt;a href=&quot;https://www.forbes.com/sites/parmyolson/2011/05/02/man-inadvertently-live-tweets-osama-bin-laden-raid/&quot;&gt;Tweets of a man in Pakistan&lt;/a&gt;. He complained of noise from helicopters and cars driving recklessly through the night. He even mentioned a helicopter crash! Late in the day I’d discover he was live Tweeting the culmination of the hunt for Bin Laden. I found this man’s profile because other people shared his Tweets.&lt;/p&gt;

&lt;p&gt;I also remember seeing Barack Obama’s “&lt;a href=&quot;https://twitter.com/BarackObama/status/266031293945503744&quot;&gt;Four more years&lt;/a&gt;” Tweet. At the time it was the most retweeted Tweet of all time. Seeing those numbers made me realise the power of the moment and how many people cared.&lt;/p&gt;

&lt;p&gt;Even more recently, I was blown away by the importance of Twitter&lt;a href=&quot;https://qz.com/india/2001374/indias-doctors-and-hospitals-join-twitter-only-to-source-oxygen/&quot;&gt;. Indian doctors used the platform to find crucial oxygen to keep Covid patients alive.&lt;/a&gt; This by the way is bad, but having a platform to enable this in the worst of times is important.&lt;/p&gt;

&lt;p&gt;There are so many huge events that I have consumed through Twitter. Charlie Hebdo, the London Bridge &amp;amp; Westminster terror attacks, protests in Hong Kong, Brexit and Trump’s election. There are so many other things I remember Twitter for. But it is the breaking news events that stick out to me.&lt;/p&gt;

&lt;p&gt;These events all prove to me the importance of Twitter as a tool to create and share world changing events. We just have to look at the &lt;a href=&quot;https://www.newsweek.com/facebook-whatsapp-outage-down-latin-america-1635533&quot;&gt;negative impact large platforms&lt;/a&gt; (&lt;a href=&quot;https://www.bbc.co.uk/news/av/technology-56212076&quot;&gt;maybe.. too large&lt;/a&gt;?) just disappearing for a day can have on the world. For example, in South America.&lt;/p&gt;

&lt;p&gt;There is an uncomfortable downside to this. Social media is used for wrong. Social media platforms have come under close scrutiny for events like the genocide of the &lt;a href=&quot;https://www.bbc.co.uk/news/world-asia-46105934&quot;&gt;Rohyinga in Myanmar&lt;/a&gt;. Can exponential growth always be good if it means we can’t keep pace?&lt;/p&gt;

&lt;p&gt;Away from the global stage. The platform has problems with &lt;a href=&quot;https://blog.twitter.com/en_gb/topics/company/2020/combatting-online-racist-abuse-an-update-following-the-euros&quot;&gt;racism&lt;/a&gt;, sexism and outright threats of violence (to name a few). Often threats from normal people to other normal people. I’d attribute this to hiding behind usernames, but the same still happens on Facebook (and 99% of accounts spreading racism after the Euro 2020s were real names!!!). I struggle to wrap my head around what people say and do on the internet.&lt;/p&gt;

&lt;p&gt;I like to wax lyrical about the importance of Twitter on the global stage. But, a huge blind spot for me is the downside Twitter has on normal every day people. Since joining, I’ve found so much motivation from interacting to smart people trying to solve these problems.&lt;/p&gt;

&lt;p&gt;Along the way.. it is good to not lose touch of what Twitter is. It’s a website and social media platform. I’m also an Android developer. Can’t change anything in the world.&lt;/p&gt;

&lt;p&gt;Anyway, I’m not sure what the conclusion of this is. But I’m really excited to be working somewhere I think is important on a platform that I know impacts real people’s lives and I wanted to capture that in words.&lt;/p&gt;</content><author><name>jordan_terry</name></author><category term="Twitter" /><summary type="html">Twitter has been ever present in my life since I found out what a smart phone was. Alongside an AR night sky app, it was one of the first apps I downloaded. Getting excited about apps like this led me to become an app developer.</summary></entry><entry><title type="html">Modular indirection with a dagger</title><link href="http://localhost:4000/blog/modular-indirection-with-a-dagger" rel="alternate" type="text/html" title="Modular indirection with a dagger" /><published>2021-12-20T18:35:31+00:00</published><updated>2021-12-20T18:35:31+00:00</updated><id>http://localhost:4000/blog/modular-indirection-with-a-dagger</id><content type="html" xml:base="http://localhost:4000/blog/modular-indirection-with-a-dagger">&lt;p&gt;In my &lt;a href=&quot;https://jordanterry.co.uk/modular-indirection&quot;&gt;last blog post&lt;/a&gt; I made a top-level overview of how a modular codebase can look with a level of indirection. The api and implementation division addresses build time issues across our code base. This architecture isn’t enough.&lt;/p&gt;

&lt;p&gt;There is a problem in our architecture that we should address in more detail. If no modules reference an :implementation we can’t create objects we need.&lt;/p&gt;

&lt;p&gt;This post introduces the :di module and discusses how it enables dependency injection. All while hiding :implementation and maintaining acceptable incremental build times.&lt;/p&gt;

&lt;h2 id=&quot;what-is-dependency-injection&quot;&gt;What is Dependency Injection?&lt;/h2&gt;

&lt;p&gt;I don’t want to go into the details of dependency injection in this blog post. But to ensure you and I are on the same page I would suggest a read &lt;a href=&quot;https://developer.android.com/training/dependency-injection&quot;&gt;of this post from the Android developer website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dependency injection should provide dependencies to objects without betraying the source of dependencies. Dependency injection plays well with the dependency inversion principle. You should identify dependency inversion throughout the previous post.&lt;/p&gt;

&lt;p&gt;In this project architecture, think of dependency injection as a supply chain. It starts with an :implementation and then delivers :api to consumers.&lt;/p&gt;

&lt;p&gt;The :di module is going to use &lt;a href=&quot;http://dagger.dev&quot;&gt;Dagger&lt;/a&gt; to to build our dependency injection graph.&lt;/p&gt;

&lt;h2 id=&quot;how-does-dependency-injection-work&quot;&gt;How does dependency injection work?&lt;/h2&gt;

&lt;p&gt;To construct a class we need to know about the dependencies of the class. For example, the parameters to a class’ constructor.&lt;/p&gt;

&lt;p&gt;To create an object we need to create the dependencies. To create dependencies we need to know their dependencies. Then the dependencies of those dependencies. So on.. so forth. You get the idea. This forms a dependency graph.&lt;/p&gt;

&lt;p&gt;This dependency graph”is a directed graph. It is like the Gradle project graph. Each node represents an object, or how to make an object.&lt;/p&gt;

&lt;p&gt;Each edge represents a dependency required to create the object the edge departs from.&lt;/p&gt;

&lt;p&gt;My tool of choice for building a graph is Dagger. There are many ways to do build the graph. But I have experience with Dagger and I am confident with it. I like the compile time guarantees that come along with it.&lt;/p&gt;

&lt;p&gt;Next up, a whistle stop tour of some of the key parts of Dagger and where they fit into our dependency graph.&lt;/p&gt;

&lt;h3 id=&quot;component&quot;&gt;@Component&lt;/h3&gt;

&lt;p&gt;A @Component annotated class is a dependency graph. It can act as a complete or partial dependency graph. We can add nodes and edges to a graph with a reference to a @Module. We can connect another graph to ours by connecting it to another @Component.&lt;/p&gt;

&lt;h3 id=&quot;module&quot;&gt;@Module&lt;/h3&gt;

&lt;p&gt;A @Module annotated class defines nodes and edges in a dependency graph. A node is either a @Provide or @Bind annotated function.&lt;/p&gt;

&lt;p&gt;Edges are parameters to a @Provide function. Or, the parameters to the constructor of a class passed to a @Bind function.&lt;/p&gt;

&lt;h3 id=&quot;inject&quot;&gt;@Inject&lt;/h3&gt;

&lt;p&gt;Annotating a constructor with @Inject tells Dagger that this class is a node. Whilst useful, we should limit usages of @Inject. We can create concretions with it. Or on classes we know are only consumed in :implementations.&lt;/p&gt;

&lt;h2 id=&quot;a-visualisation&quot;&gt;A visualisation&lt;/h2&gt;

&lt;p&gt;This sounds great in text. But as always a visualisation of how this relates to a dependency graph will help.&lt;/p&gt;

&lt;p&gt;I’ve used OkHttp in the example and I hope there are some familiar concepts in there.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-full&quot;&gt;!&lt;img src=&quot;/wp-content/uploads/2021/12/A-Component-Graph.png&quot; alt=&quot;A Dagger Component that references a Module and @Injected classes being contrasted against the Direct Acyclic Graph it creates.&quot; /&gt;&lt;figcaption&gt;Dagger components and the graph they create.&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;We can see how the Dagger infrastructure builds ourselves a dependency graph. The component contains the graph and modules are contributing nodes and edges to the graph.&lt;/p&gt;

&lt;p&gt;Components can reference components. This is useful when we want to use dependencies that come from a separate dependency graph. This is going to be a key concept going forwards.&lt;/p&gt;

&lt;h2 id=&quot;aligning-the-graphs&quot;&gt;Aligning the graphs&lt;/h2&gt;

&lt;p&gt;The project graph tells us how different projects relate and form an application. The dependency graph tells us how the objects inside glue together to make other objects.&lt;/p&gt;

&lt;p&gt;The two graphs relate, but.. also don’t relate. Gradle creates the project graph. It enables the dependency graph created by Dagger. But, it doesn’t know anything about it.&lt;/p&gt;

&lt;p&gt;Using the :di module we can align the two graphs and attempt to create a single mental model. This will help developers working with this architecture.&lt;/p&gt;

&lt;p&gt;If we draw both graphs separately and then together we can see that the two graphs do align.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2021/12/Implementation-and-Dagger-Graphs-1003x1024.png&quot; /&gt;&lt;/figure&gt;
&lt;p&gt;Project relationships enables objects inside projects to have a relationship with each other.&lt;/p&gt;

&lt;p&gt;The combined graph above gives us information about the structure of our code. It will help us in our mission to modularise with indirection:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cross boundary object references state our public api. They belong in the :api module.&lt;/li&gt;
  &lt;li&gt;Classes not referenced outside of a project must be encapsulated within an :implementation module.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Modifying our :networking project to align with our new model. Gives us the same graph, but with a bit of a split between them. We are going to use the :di module to indirectly maintain the relationships between project and object that we saw above.&lt;/p&gt;

&lt;h2 id=&quot;introducing-the-di-module&quot;&gt;Introducing the :di module&lt;/h2&gt;

&lt;p&gt;The :di module handles providing the :implementation in the shape of the :api module. To me, this is the module that is used to make our Dagger graph align with the project graph.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2021/12/Implementation-and-api-profile-and-network-_di-1024x538.png&quot; /&gt;&lt;figcaption&gt;A lot of lines creeping into these diagrams!&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;The :di module above contains component and module classes; the graph and the nodes and edges.&lt;/p&gt;

&lt;p&gt;We should treat the component as the single Dagger entry point into a Gradle project. There are a couple of rules to follow in our :di module:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Components should be public. They are the only objects in our :di module that can be referenced across project boundaries.&lt;/li&gt;
  &lt;li&gt;Modules should only have an internal modifier. Never reference a module across project boundaries.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The :di project itself should reference two other local projects: :api and :implementation. This gives the project the ability to upcast and concrete classes into their abstractions.&lt;/p&gt;

&lt;p&gt;If :implementation modules are only referenced in a couple of places. Never in the places they are actually needed. There is no way to actually create the objects without the :di module.&lt;/p&gt;

&lt;h2 id=&quot;how-to-use-the-di-module&quot;&gt;How to use the :di module&lt;/h2&gt;

&lt;p&gt;The parent of the module should only be referenced directly by it’s parent project. The :di module glues together components. For example, a :profile:di module might look something like this :networking:di.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;pre class=&quot;wp-block-code&quot;&amp;gt;```
@Component(dependencies = [NetworkingComponent::class])
interface ProfileComponent {

    fun inject(profileActivity: ProfileActivity)

    @Component.Builder
    interface Builder {
        fun addDependency(networkingComponent: NetworkingComponent): Builder
        fun build(): ProfileComponent
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;A real project is going to be a bit more complex than this small example. As more projects are referencing each other our components will compose together creating a larger and larger dependency graph.&lt;/p&gt;

&lt;p&gt;The composed components will be referenced in a project that applies an android application plugin. If the projects and components are correctly set up then any projects depending on an :api module will receive the fully resolved implementations.&lt;/p&gt;

&lt;p&gt;Whilst this does bring some complexity to our project set up it does maintain the incremental build time improvements we really want to maintain from the previous blog post. If an :implementation module changes it will only invalidate any related :di projects. This is an acceptable cost for delivering concretions throughout our application.&lt;/p&gt;

&lt;h2 id=&quot;validation&quot;&gt;Validation&lt;/h2&gt;

&lt;p&gt;In the last blog post I wrapped up with a short bit on how we can validate the project graph and prove that the :implementation module is used correctly.&lt;/p&gt;

&lt;p&gt;We can do the same here and prove our :di module is used correctly. Here are a couple of rules:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A :di module can only be referenced by another :di module or by it’s parent module.&lt;/li&gt;
  &lt;li&gt;A :di module can only reference a :di module if it’s sibling :implementation module references an :implementation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The combination of the above ensures the module structure has been correctly wired together and the object supply chain will work as expected.&lt;/p&gt;

&lt;p&gt;I think this post has only really scratched the surface of how dependency injection is important. I think I could go into much, much more detail about each point here. But I don’t want to write a book! I hope I’ve at least painted a picture on how crucial dependency injection is in our modular indirection.&lt;/p&gt;</content><author><name>jordan_terry</name></author><category term="Coding" /><summary type="html">Using a Dagger to dependency inject our modular application.</summary></entry><entry><title type="html">Modular indirection is the best direction</title><link href="http://localhost:4000/blog/modular-indirection" rel="alternate" type="text/html" title="Modular indirection is the best direction" /><published>2021-12-08T09:19:54+00:00</published><updated>2021-12-08T09:19:54+00:00</updated><id>http://localhost:4000/blog/modular-indirection</id><content type="html" xml:base="http://localhost:4000/blog/modular-indirection">&lt;p&gt;&lt;em&gt;(If you think this title is bad you should see how I name variables!)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Whilst I worked at the Guardian I worked in a monolithic codebase. The majority of code lived in a single module. This had the expected downsides:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;slow incremental builds,&lt;/li&gt;
  &lt;li&gt;hard to discover code&lt;/li&gt;
  &lt;li&gt;quite a bit of known, but hidden, complexity!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our aim was to increase modularisation. This would bring faster incremental builds and increase better engineering practices. With lower coupling and increased cohesion we will see better code. We also had business goals to increase cross functional collaboration. Modularisation should encourage this.&lt;/p&gt;

&lt;p&gt;Modularising unearthed some impressive levels of coupling and a general lack of cohesiveness. Let’s not talk about our Dagger set up! This melange made it very difficult to break apart our monolith.&lt;/p&gt;

&lt;p&gt;It became clear that to tackle this problem we needed to standardise our approach. So, as with all good projects this meant a good deal of investigation into the best approaches.&lt;/p&gt;

&lt;p&gt;There were two sources I kept coming back to over and over again:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ralf Wondratschek’s talk called &lt;a href=&quot;https://www.droidcon.com/2019/11/15/android-at-scale-square/?video=380843878&quot;&gt;Android at Scale @Square&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Nacho Lopez and César Puerta’s talk called &lt;a href=&quot;https://nlopez.io/scaling-dagger-di-in-a-modular-world/&quot;&gt;Scaling Dagger DI in a Modular World&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both talks give excellent insights into the world of modularisation in large codebases, it also gives insight into how we can tackle this with dependency injection (this post is going to avoid dependency injection in detail because it deserves it’s own!). I regularly re-watch those talks and I feel like I pick up on something new every time I watch them. Here are some top-level topics that both talks cover:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creating modular code bases that don’t compromise on build speeds&lt;/li&gt;
  &lt;li&gt;Making good use of dependency injection (Dagger @Square and Scythe @Twitter) in a modular code base&lt;/li&gt;
  &lt;li&gt;Moving our monolithic code (:hairball, @Square and :legacy @Twitter) into smaller modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I left the Guardian and joined Twitter before we made large amounts of progress. Twitter is much further along in the modularisation process discussed above. It is so exciting to see something I have spent a whole year thinking about in action.&lt;/p&gt;

&lt;p&gt;Over this year I’ve done a fair bit of thinking and prototyping based upon the talks above and from my own ideas. I’ve gotten to a place where I am happy with what I’ve come up with. I will write a series of blog posts to delve into the benefits and some tooling ideas I have floating around in my head.&lt;/p&gt;

&lt;p&gt;This post explains my mental model of a problem we want to solve. Provide some concrete examples of a solution and then validate the improved approach.&lt;/p&gt;

&lt;h2 id=&quot;the-gradle-graph&quot;&gt;The Gradle graph&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;pre class=&quot;wp-block-verse&quot;&amp;gt;&amp;lt;strong&amp;gt;I am not a Gradle pro, I am working on a mental model that I think makes sense. Would love some feedback on this!&amp;lt;/strong&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lets look at how Gradle and build a mental model to look at the problem. I’m going to come back to this mental model a number of times in this post.&lt;/p&gt;

&lt;p&gt;An important primitive in the world of Gradle is a &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Project.html&quot;&gt;project&lt;/a&gt;, commonly referred to as a module. We can spot a project as it is a directory containing a build.gradle file. Gradle projects have 0..n nested sub-projects. Projects can nest content like code or resources in other sub-directories.&lt;/p&gt;

&lt;p&gt;Gradle builds a directed graph, this is a graph where the edges between nodes have a direction. We can not create a circular reference in a directed graph. Nodes are projects. Edges are relationships defined by a Gradle dependency e.g. implementation, api or kapt.&lt;/p&gt;

&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter size-full&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2021/12/Theoretical-project-structure.png&quot; /&gt;&lt;figcaption&gt;Project graph of a small modular application.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;Changing the code in a project invalidates our project or any related projects. In the above example, a change in the :networking module may invalidate the six other modules.&lt;/p&gt;

&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter size-full&quot;&gt;&lt;img src=&quot;/wp-content/uploads/2021/12/Theoretical-project-structure-Invalidation.png&quot; /&gt;&lt;figcaption&gt;Project graph with invalidated dependencies.&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;In general the code in each of these modules recompiles (not always true, but it is true in this mental model). We can push our black box of knowledge a little bit deeper by looking at what is a task.&lt;/p&gt;

&lt;h3 id=&quot;tasks&quot;&gt;Tasks&lt;/h3&gt;

&lt;p&gt;A &lt;a href=&quot;https://docs.gradle.org/current/dsl/org.gradle.api.Task.html&quot;&gt;task&lt;/a&gt; is an idempotent piece of work that Gradle may execute to do a job. Because it is idempotent, Gradle is able to cache the result. If inputs are the same as a previous running of the task we know that we can use the cached result.&lt;/p&gt;

&lt;p&gt;Every Gradle plugin contains a set of tasks. For example, the Kotlin JVM plugin contains tasks that compile using kotlinc. The kapt plugin contains tasks that create java stubs from Kotlin files. The Android application project contains tasks to generate an AAB or APK. Tasks are added to a project by applying a plugin to a project. The plugin helps us to identify the type of project we are working with.&lt;/p&gt;

&lt;h3 id=&quot;task-invalidation&quot;&gt;Task invalidation&lt;/h3&gt;

&lt;p&gt;A Gradle task invalidates when new inputs to a task differ from the inputs to a cached version. The task must now be re-run to produce a new result. An input to a task can be a file or even the result of another task. Tasks may cross project boundaries and can validate another project’s tasks. This explains the large quantity of red arrows in the last graph.&lt;/p&gt;

&lt;p&gt;Incremental compilation is when Gradle only runs invalidated tasks. We want to keep invalidated to tasks to the smallest. This means reducing the number of edges in the graph. The more modules that need to be recompiled the longer your incremental builds may be.&lt;/p&gt;

&lt;p&gt;Our job as developers of a modularised codebase is to maintain a healthy project graph. As we begin to modularise a monolithic application we will see an improvement in build time. If we don’t manage this correctly, our invalidated project graph will begin to rival the incremental build time of our monolith.&lt;/p&gt;

&lt;p&gt;Another benefit for Gradle enterprise consumers is that smaller cached tasks can be easily shared across many users. We will begin to see improvements in our clean build time for developers.&lt;/p&gt;

&lt;h2 id=&quot;tackling-with-indirection&quot;&gt;Tackling with indirection&lt;/h2&gt;

&lt;p&gt;To resolve this we can make use of a bit of indirection and play some tricks with Gradle to reduce invalidated tasks.&lt;/p&gt;

&lt;p&gt;The talks linked to above all suggest an architecture that divides an :api from an :implementation. Let’s delve into this a bit deeper. Top-level projects must be split into at least three smaller projects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;:api&lt;/strong&gt; – Defines a static api that other modules can use&lt;/li&gt;
  &lt;li&gt;:&lt;strong&gt;implementation&lt;/strong&gt; – Contains implementations for all abstractions defined in the :api module&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;:di&lt;/strong&gt; – This contains the code that wires together the &lt;strong&gt;:api&lt;/strong&gt; to the &lt;strong&gt;:implementation&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a few rules. Other projects that want to use our feature should only refer to the :api project. The :implementation module should only be consumed by a com.android.application project and the :di module.&lt;/p&gt;

&lt;div class=&quot;wp-block-image&quot;&gt;&lt;figure class=&quot;aligncenter size-full&quot;&gt;&lt;img src=&quot;https://jordanterry.co.uk/wp-content/uploads/2021/12/Networking-Api_Impl.png&quot; /&gt;&lt;figcaption&gt;The relationships in a module split by an :api and :implementation&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;p&gt;You may notice that the parent :networking project references all internal modules, :api, :implementation and :di. This is not necessary but I like this as it allows our com.android.application modules to create a manifest of all required modules.&lt;/p&gt;

&lt;p&gt;Let’s recreate our first project graph again with our new :networking module structure.&lt;/p&gt;

&lt;figure class=&quot;wp-block-image size-full&quot;&gt;&lt;img src=&quot;https://jordanterry.co.uk/wp-content/uploads/2021/12/Theoretical-project-structure-2.png&quot; /&gt;&lt;figcaption&gt;The original graph now with a networking module with an :api and :implementation split.&lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Looking at this graph again we can see the improvement this should make. We’ve reduced the number of direct edges to our volatile :implementation module. Imagine invalidating the :implementation module we can see it has a much reduced impact when compared to :image-loading.&lt;/p&gt;

&lt;p&gt;There are a lot of interesting ways we can take this module structure. It simplifies creating one off applications (called sandboxes at Twitter), we can nest our tests and separate our fakes.&lt;/p&gt;

&lt;p&gt;The eagle eyed among you may notice that the :di module also references the :implementation module. This allows our :di module to downcast our implementations into the abstractions contained in our :api module. Like I mentioned above, this really deserves it’s own blog post!&lt;/p&gt;

&lt;h2 id=&quot;validation&quot;&gt;Validation&lt;/h2&gt;

&lt;p&gt;Wouldn’t it be great if we can validate that this approach actually brings the improvements I am promising. Well.. I can’t prove this right now but I have some ideas and it is actually the reason I wrote this blog post.&lt;/p&gt;

&lt;p&gt;I plan to create some tooling that can be used on a project implementing a module structure as I’ve defined above. The tooling will live within Android Studio/IntelliJ or separately through CI tooling.&lt;/p&gt;

&lt;h3 id=&quot;invalidated-tasks&quot;&gt;Invalidated Tasks&lt;/h3&gt;

&lt;p&gt;We measure our builds using time (or success or failure). Time has many variables:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;your machine (slow/fast processor),&lt;/li&gt;
  &lt;li&gt;concurrent processes (1 or 100 browser tabs open)&lt;/li&gt;
  &lt;li&gt;or the status of your local Gradle daemon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gradle has another indicator: measuring the number of tasks invalidated by a change. Whilst not giving us a concrete time impact we can infer the impact of those invalidated tasks.&lt;/p&gt;

&lt;h3 id=&quot;searching-the-graph&quot;&gt;Searching the graph&lt;/h3&gt;

&lt;p&gt;We can validate a two properties if we look into the shape of the Gradle project graph:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;An :implementation module should only have a depth of two from a com.android.application node&lt;/li&gt;
  &lt;li&gt;Any :implementation module should have one direct sibling with an implementation edge (:di) and another reference from a parent module (it may have one or more testImplementation)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If these properties are true, we know we have created an isolated :implementation module. We can safely change without worrying about the impact of our changes throughout the rest of our project graph.&lt;/p&gt;

&lt;p&gt;Property #1 is validatable by finding an application module node and starting a depth-first search from that node until we have found every :implementation module throughout our code base. If we find a module after visiting more than two nodes we know this module needs to be improved.&lt;/p&gt;

&lt;p&gt;We can confirm property #2 by confirming that every implementation module is visited twice. If we encounter it more than twice it is an indicator that the graph is incorrect.&lt;/p&gt;

&lt;p&gt;I hope this has been interesting for some developers out there, but this post has gotten a bit too lengthy! The next post in this series will talk about dependency injection in a modularised world and look into how the directed graph of dependency injection can work alongside our project graph!&lt;/p&gt;</content><author><name>jordan_terry</name></author><category term="Coding" /><category term="Twitter" /><summary type="html">Introducing indirection into your modular structure can improve the incremental build times of your android application.</summary></entry><entry><title type="html">Learning a lot at Twitter</title><link href="http://localhost:4000/blog/learning-a-lot-at-twitter" rel="alternate" type="text/html" title="Learning a lot at Twitter" /><published>2021-11-04T21:01:11+00:00</published><updated>2021-11-04T21:01:11+00:00</updated><id>http://localhost:4000/blog/learning-a-lot-at-twitter</id><content type="html" xml:base="http://localhost:4000/blog/learning-a-lot-at-twitter">&lt;p&gt;I recently joined Twitter as an Android Developer. So far, it is unlike anywhere I have ever worked before. In two months I have learned a lot and have been incredibly overwhelmed. I’ve recently felt like I have started to get on top of the learning curve and I can start to reflect a bit on the first two months. To do that, I’m going to make an effort to blog three times a week focusing on a few topics.&lt;/p&gt;

&lt;p&gt;I already have so many thoughts on MVI, dependency injection (and annotation processors!), lifecycles and memory leaks, build times, working with developers across the pond, finally learning how to rebase, saying phab instead of pull request, senior developers and not knowing everything about the app you work on. Have I mentioned build times?&lt;/p&gt;</content><author><name>jordan_terry</name></author><category term="Coding" /><category term="Twitter" /><summary type="html">I recently joined Twitter as an Android Developer. So far, it is unlike anywhere I have ever worked before. In two months I have learned a lot and have been incredibly overwhelmed. I’ve recently felt like I have started to get on top of the learning curve and I can start to reflect a bit on the first two months. To do that, I’m going to make an effort to blog three times a week focusing on a few topics.</summary></entry></feed>